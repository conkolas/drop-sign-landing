{"version":3,"sources":["utils/theme.js","components/Logo/Logo.js","containers/FixedHeader/FixedHeaderStyle.js","containers/FixedHeader/FixedHeader.js","containers/Header/HeaderStyle.js","containers/Header/Header.js","containers/PageSection/PageSectionStyle.js","containers/PageSection/PageSection.js","containers/Footer/FooterStyle.js","containers/Footer/Footer.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["themes","main","color","mainBackground","mainForeground","primary","secondary","lightText","darkText","menuActive","signupBackground","header","logoAlt","height","footer","transition","normal","quick","decelerate","accelerate","Logo","props","react_default","a","createElement","src","alt","Gap","styled","div","_templateObject","theme","_templateObject2","FixedHeader","HeaderComponent","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fixed","window","addEventListener","scrollY","setState","inherits","createClass","key","value","removeEventListener","FixedHeaderStyle","className","React","Component","HeaderStyle_templateObject","HeaderStyle","index_es","container","direction","justify","alignItems","item","section","PageSectionStyle_templateObject","PageSection","PageSectionStyle","assign","FooterStyle_templateObject","Footer","FooterStyle","pageSections","name","App","styled_components_browser_esm","containers_Header_Header","map","containers_PageSection_PageSection","containers_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d1872f8f.chunk.js","sourcesContent":["const themes = {\n  main: {\n    color: {\n      mainBackground: '#FFFFFF',\n      mainForeground: '#481BFF',\n      \n      primary: '#4D20FF',\n      secondary: '#12E8A8',\n  \n      lightText: '#FFFFFF',\n      darkText: '#4F4F4F',\n  \n      menuActive: '#9EAEFF',\n      signupBackground: '#D6DAFF',\n    },\n\n    header: {\n      logoAlt: 'Drop and Sign',\n      height: 90\n    },\n    footer: {\n      height: 110\n    },\n\n    transition: {\n      normal: '0.3s',\n      quick: '0.1s',\n      decelerate: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n      accelerate: 'cubic-bezier(0.4, 0.0, 1, 1)',\n    }\n  }\n}\nexport default themes;","import React from 'react';\nimport Logo from './../../assets/logo.svg';\n\nexport default (props) => (\n  <div {...props}>\n    <img src={Logo} alt=\"Logo\"/>\n  </div>\n)","import styled from 'styled-components';\n\nexport const Gap = styled.div`\n  height: ${ props => props.theme.header.height}px;\n`;\n\nexport default styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0; left: 0;\n  box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.08);\n  transition: box-shadow \n    ${ props => props.theme.transition.normal } \n    ${ props => props.theme.transition.decelerate };\n\n  &.fixed {\n    box-shadow: 0px 8px 8px rgba(0, 0, 0, 0.08);\n    transition: box-shadow \n      ${ props => props.theme.transition.quick } \n      ${ props => props.theme.transition.accelerate };\n  }\n`;","import React from 'react';\nimport StyledFixedHeader, { Gap } from './FixedHeaderStyle';\n\nconst FixedHeader = (HeaderComponent) => {\n  return class FixedHeader extends React.Component {\n    state = { fixed: false };\n\n    constructor(props) {\n      super(props);\n      window.addEventListener('scroll', () => {\n        if (window.scrollY === 0 && this.state.fixed) {\n          this.setState({ fixed: false });\n          return;\n        }\n        if (window.scrollY > 0 && !this.state.fixed) {\n          this.setState({ fixed: true })\n        }\n      });\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener('scroll');\n    }\n\n    render() {\n      const { fixed } = this.state;\n      return (\n        <div>\n          <Gap></Gap>\n          <StyledFixedHeader className={ fixed ? 'fixed' : ''}>\n            <HeaderComponent {...this.props} ></HeaderComponent>\n          </StyledFixedHeader>\n        </div>\n      );\n    }\n  }\n}\n\nexport default FixedHeader;\n","import styled from 'styled-components';\n\nexport default styled.header`\n  height: ${ props => props.theme.header.height}px;\n  background: ${ props => props.theme.color.mainBackground};\n\n  .grid {\n    width: 100%;\n    height: 100%;\n  }\n`;","import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport Logo from './../../components/Logo/Logo';\nimport FixedHeader from './../../containers/FixedHeader/FixedHeader';\nimport StyledHeader from './HeaderStyle';\n\nconst Header = (props) => (\n  <StyledHeader {...props} >\n    <Grid \n      container \n      direction=\"row\" \n      justify=\"space-between\"\n      alignItems=\"center\"\n      className=\"grid\">\n        <Grid item>\n          <Logo></Logo>\n        </Grid>\n    </Grid>\n  </StyledHeader>\n)\n\nexport default FixedHeader(Header);\n","import styled from 'styled-components';\n\nexport default styled.section`\n  height: 300px;\n  background: ${ \n    props => props.secondary ? \n      props.theme.color.mainForeground : \n      props.theme.color.mainBackground};\n`;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledPageSection from './PageSectionStyle';\n\nclass PageSection extends Component {\n  render() {\n    return (\n      <StyledPageSection {...this.props} \n        className={this.props.secondary ? 'secondary' : ''}>\n        \n      </StyledPageSection>\n    );\n  }\n}\n\nPageSection.propTypes = {\n  secondary: PropTypes.bool\n}\n\nexport default PageSection;\n","import styled from 'styled-components';\n\nexport default styled.footer`\n  height: ${ props => props.theme.footer.height}px;\n  background: ${ props => props.theme.color.mainBackground};\n`;","import React, { Component } from 'react';\nimport StyledFooter from './FooterStyle';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <StyledFooter {...this.props}>\n\n      </StyledFooter>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport themes from './utils/theme';\n\nimport Header from './containers/Header/Header';\nimport PageSection from './containers/PageSection/PageSection';\nimport Footer from './containers/Footer/Footer';\n\nconst pageSections = [\n  {\n    name: '1',\n    secondary: false\n  },\n  {\n    name: '2',\n    secondary: true\n  },\n  {\n    name: '3',\n    secondary: false\n  },\n  {\n    name: '4',\n    secondary: true\n  },\n]\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={themes.main}>\n        <div>\n            <Header></Header>\n              { pageSections.map( section => \n                <PageSection key={section.name} secondary={section.secondary}></PageSection>)\n              }\n            <Footer></Footer>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.14b5cf68.svg\";"],"sourceRoot":""}